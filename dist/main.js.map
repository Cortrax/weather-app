{"version":3,"file":"main.js","mappings":"mBAwFA,QAnFAA,eAAgCC,GAC9B,MAAMC,QAAiBC,MACrB,oDAAoDF,0DACpD,CAAEG,KAAM,SAEJC,EAAQC,SAASC,cAAc,UAErC,GAAwB,MAApBL,EAASM,QAAsC,MAApBN,EAASM,OACtCH,EAAMI,UAAUC,IAAI,cACf,CACLL,EAAMI,UAAUE,OAAO,UACvB,MAAMC,QAAoBV,EAASW,QAYvC,SAAqBD,GACnB,MAAME,EAAeR,SAASC,cAAc,iBACtCQ,EAAOH,EAAYG,KACzBD,EAAaE,UAAYD,CAC3B,CAfIE,CAAYL,GAiBhB,SAAqBA,GAEnB,MAAMM,EAAOZ,SAASC,cAAc,SAC9BY,EAAYb,SAASC,cAAc,cACnCa,EAAcd,SAASC,cAAc,YAErCc,EAAcC,KAAKC,MAAMX,EAAYY,KAAKN,MAChDA,EAAKF,UAAY,GAAGK,KAEpB,MAAMI,EAAgBH,KAAKC,MAAMX,EAAYY,KAAKE,YAClDP,EAAUH,UAAY,eAAeS,KAErC,MAAME,EAAgBL,KAAKC,MAAMX,EAAYY,KAAKI,UAC5CC,EAAgBP,KAAKC,MAAMX,EAAYY,KAAKM,UAClDV,EAAYJ,UAAY,aAAaW,MAAkBE,IACzD,CA/BIE,CAAYnB,GAiChB,SAAyBA,GACNN,SAASC,cAAc,aAC/BS,UAAY,aAAeJ,EAAYY,KAAKQ,SAAW,GAClE,CAnCIC,CAAgBrB,GAqCpB,SAA0BA,GACxB,MAAMsB,EAAY5B,SAASC,cAAc,cACnC4B,EAAOb,KAAKC,MAA+B,MAAzBX,EAAYuB,KAAKC,OACzCF,EAAUlB,UAAY,eAAemB,MACvC,CAxCIE,CAAiBzB,GA0CrB,SAAyBA,GACvB,MAAM0B,EAAWhC,SAASC,cAAc,aAClCgC,GAAc3B,EAAYY,KAAKc,SAAW,QAAQE,QAAQ,GAChEF,EAAStB,UAAY,aAAauB,KACpC,CA7CIE,CAAgB7B,GA+CpB,SAAuBA,GACNN,SAASC,cAAc,WAC/BS,UAAYJ,EAAY8B,QAAQ,GAAGC,WAC5C,CAjDIC,CAAchC,GAqDlBZ,eAA2BY,GACzB,IAAIiC,EAAUjC,EAAY8B,QAAQ,GAAGC,YAErC,MAAMzC,QAAiBC,MACrB,sFAAsF0C,IACtF,CAAEzC,KAAM,SAEJ0C,QAAiB5C,EAASW,OACpBP,SAASC,cAAc,SAC/BwC,IAAMD,EAASE,KAAKC,OAAOC,SAASC,GAE1C,CA/DIC,CAAYxC,GACZyC,QAAQC,IAAI1C,EACd,CACF,GCxBA,WACE,IAAI2C,EAAcjD,SAASC,cAAc,WACvBD,SAASC,cAAc,cAC/BiD,iBAAiB,SAAS,KAClC,EAAiBD,EAAYE,OAC7BF,EAAYE,MAAQ,EAAE,IAIxBF,EAAYC,iBAAiB,SAAUE,IACnB,KAAdA,EAAEC,UACJ,EAAiBJ,EAAYE,OAC7BF,EAAYE,MAAQ,GACtB,GAEJ,CACAG,E","sources":["webpack://weather-app/./src/weather.js","webpack://weather-app/./src/index.js"],"sourcesContent":["function errorMessage() {\r\n  const error = document.querySelector('.error');\r\n  error.classList.toggle('active');\r\n}\r\n\r\nasync function fetchWeatherData(location) {\r\n  const response = await fetch(\r\n    `http://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&APPID=299210b0adfb06a8cfaeedf6ef92b116`,\r\n    { mode: 'cors' }\r\n  );\r\n  const error = document.querySelector('.error');\r\n\r\n  if (response.status === 400 || response.status === 404) {\r\n    error.classList.add('active');\r\n  } else {\r\n    error.classList.remove('active');\r\n    const weatherData = await response.json();\r\n    displayName(weatherData);\r\n    displayTemp(weatherData);\r\n    displayHumidity(weatherData);\r\n    displayWindSpeed(weatherData);\r\n    displayPressure(weatherData);\r\n    displayClouds(weatherData);\r\n    generateGif(weatherData);\r\n    console.log(weatherData);\r\n  }\r\n}\r\n\r\nfunction displayName(weatherData) {\r\n  const locationName = document.querySelector('.locationName');\r\n  const name = weatherData.name;\r\n  locationName.innerHTML = name;\r\n}\r\n\r\nfunction displayTemp(weatherData) {\r\n  // Kelvin to fahrenheit\r\n  const temp = document.querySelector('.temp');\r\n  const feelsLike = document.querySelector('.feelsLike');\r\n  const tempHighLow = document.querySelector('.highLow');\r\n\r\n  const fahrenheit1 = Math.round(weatherData.main.temp);\r\n  temp.innerHTML = `${fahrenheit1}째`;\r\n\r\n  const feelsLikeTemp = Math.round(weatherData.main.feels_like);\r\n  feelsLike.innerHTML = `Feels like: ${feelsLikeTemp}째`;\r\n\r\n  const fahrenheitMax = Math.round(weatherData.main.temp_max);\r\n  const fahrenheitMin = Math.round(weatherData.main.temp_min);\r\n  tempHighLow.innerHTML = `High/low: ${fahrenheitMax}째/${fahrenheitMin}째`;\r\n}\r\n\r\nfunction displayHumidity(weatherData) {\r\n  const humidity = document.querySelector('.humidity');\r\n  humidity.innerHTML = 'Humidity: ' + weatherData.main.humidity + '%';\r\n}\r\n\r\nfunction displayWindSpeed(weatherData) {\r\n  const windSpeed = document.querySelector('.windSpeed');\r\n  const wind = Math.round(weatherData.wind.speed * 1.151);\r\n  windSpeed.innerHTML = `Wind speed: ${wind}mph`;\r\n}\r\n\r\nfunction displayPressure(weatherData) {\r\n  const pressure = document.querySelector('.pressure');\r\n  const pressureIn = (weatherData.main.pressure / 33.864).toFixed(2);\r\n  pressure.innerHTML = `Pressure: ${pressureIn}in`;\r\n}\r\n\r\nfunction displayClouds(weatherData) {\r\n  const clouds = document.querySelector('.clouds');\r\n  clouds.innerHTML = weatherData.weather[0].description;\r\n}\r\n\r\n// Generate gif to match weather\r\n\r\nasync function generateGif(weatherData) {\r\n  let skyGiph = weatherData.weather[0].description;\r\n  \r\n  const response = await fetch(\r\n    `https://api.giphy.com/v1/gifs/translate?api_key=7a3l3lrg02kP62OaQ7i6Nc9d8TRymKBq&s=${skyGiph}`,\r\n    { mode: 'cors' }\r\n  );\r\n  const giphData = await response.json();\r\n  const img = document.querySelector('.giph');\r\n  img.src = giphData.data.images.original.url;\r\n  \r\n}\r\n\r\nexport default fetchWeatherData;\r\n","import fetchWeatherData from \"./weather\";\r\n\r\nfunction getWeatherData() {\r\n  let searchInput = document.querySelector('.search');\r\n  const searchBtn = document.querySelector('.searchBtn');\r\n  searchBtn.addEventListener('click', () => {\r\n    fetchWeatherData(searchInput.value);\r\n    searchInput.value = '';\r\n\r\n  });\r\n\r\n  searchInput.addEventListener('keyup', (e) => {\r\n    if (e.keyCode === 13) {\r\n      fetchWeatherData(searchInput.value);\r\n      searchInput.value = '';\r\n    }\r\n  });\r\n}\r\ngetWeatherData();"],"names":["async","location","response","fetch","mode","error","document","querySelector","status","classList","add","remove","weatherData","json","locationName","name","innerHTML","displayName","temp","feelsLike","tempHighLow","fahrenheit1","Math","round","main","feelsLikeTemp","feels_like","fahrenheitMax","temp_max","fahrenheitMin","temp_min","displayTemp","humidity","displayHumidity","windSpeed","wind","speed","displayWindSpeed","pressure","pressureIn","toFixed","displayPressure","weather","description","displayClouds","skyGiph","giphData","src","data","images","original","url","generateGif","console","log","searchInput","addEventListener","value","e","keyCode","getWeatherData"],"sourceRoot":""}